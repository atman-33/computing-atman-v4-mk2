generator client {
    provider = "prisma-client-js"
}

datasource db {
    // provider = "postgresql"
    provider = "mongodb"
    url      = env("DB_URL")
}

generator nestgraphql {
    provider                = "node node_modules/prisma-nestjs-graphql"
    output                  = "../../../generated-db-types/src"
    purgeOutput             = false
    combineScalarFilters    = true
    emitSingle              = true
    noAtomicOperations      = true
    // field validator
    fields_Validator_input  = true
    fields_Validator_output = true
    fields_Validator_model  = true
    fields_Validator_from   = "class-validator"
    // Args where|data nested validator
    // decorate_1_type         = "*Args"
    // decorate_1_field        = "@(data|where)"
    // decorate_1_name         = ValidateNested
    // decorate_1_from         = "class-validator"
    // decorate_1_arguments    = "[]"
}

// ---- Mongo db base model ------------------------------------- //
// This model is necessary to create IntFilter
model BaseModel {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    /// @Validator.IsString()
    text      String?
    /// @Validator.@IsInt()
    int       Int?
    float     Float?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// -------------------------------------------------------------- // 

model SampleTodo {
    id        String  @id @default(auto()) @map("_id") @db.ObjectId
    /// @Validator.IsString()
    content   String
    editing   Boolean
    completed Boolean
}
